# Generated by Django 2.0.4 on 2018-04-30 11:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import project.feed.models.user_profile


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='category_name')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='review_comment')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date_created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='date_modified')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['-modified'],
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='feed.Comment')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CommentLike',
                'verbose_name_plural': 'CommentLikes',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=30, verbose_name='user_location')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='user_phone_number')),
                ('things_love', models.TextField(verbose_name='things_user_love')),
                ('description', models.TextField(verbose_name='user_description')),
                ('image', models.ImageField(upload_to='')),
                ('registration_code', models.CharField(default=project.feed.models.user_profile.code_generator, max_length=15, verbose_name='registration_code')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='restaurant_name')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('street', models.CharField(max_length=50, verbose_name='restaurant_street')),
                ('city', models.CharField(max_length=50, verbose_name='restaurant_city')),
                ('zip', models.CharField(blank=True, max_length=10, verbose_name='restaurant_zip')),
                ('website', models.URLField(blank=True, verbose_name='restaurant_website')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='restaurant_phone_number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='restaurant_email')),
                ('opening_hours', models.CharField(max_length=50, verbose_name='restaurant_opening_hours')),
                ('price_level', models.CharField(choices=[('LOW', '$'), ('MEDIUM', '$$'), ('HIGH', '$$$')], max_length=3, verbose_name='restaurant_price_level')),
                ('image', models.ImageField(upload_to='')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Restaurant',
                'verbose_name_plural': 'Restaurants',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='review_content')),
                ('rating', models.IntegerField(verbose_name='restaurant_rating')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date_created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='date_modified')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='feed.Restaurant')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-modified'],
            },
        ),
        migrations.CreateModel(
            name='ReviewLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviews', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='feed.Review')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ReviewLike',
                'verbose_name_plural': 'ReviewLikes',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='reviews',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feed.Review'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='restaurant',
            field=models.ManyToManyField(blank=True, related_name='categories', to='feed.Restaurant'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewlike',
            unique_together={('user', 'reviews')},
        ),
        migrations.AlterUniqueTogether(
            name='reviews',
            unique_together={('user', 'restaurant')},
        ),
        migrations.AlterUniqueTogether(
            name='commentlike',
            unique_together={('user', 'comment')},
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('user', 'reviews')},
        ),
    ]
